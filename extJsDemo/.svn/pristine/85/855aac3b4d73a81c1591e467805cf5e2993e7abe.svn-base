package com.my9yu.charge.admin;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.my9yu.charge.common.server.entity.Operator;
import com.my9yu.charge.common.server.model.ChargeErrorCode;
import com.my9yu.charge.common.server.service.ServerService;
import com.my9yu.common.utils.json.JsonUtils;

@Controller
public class ChargeTestAccountController {

	@Autowired
	private ServerService service;

	/***
	 * 添加充值 TEST 账号
	 **/
	@SuppressWarnings("unchecked")
	@RequestMapping(value = "{operatorId}/api-test-accounts", method = RequestMethod.POST)
	public ResponseEntity<Object> createOperator(@PathVariable int operatorId, @RequestBody String json) {
		Set<String> account;
		try {
			account = JsonUtils.string2Object(json, Set.class);
		} catch (Exception e) {
			return new ResponseEntity<Object>(ChargeErrorCode.JSON_ERROR, HttpStatus.BAD_REQUEST);
		}

		Operator operator = service.getOperator(operatorId);
		if (operator == null) {
			return new ResponseEntity<Object>(ChargeErrorCode.NOT_FIND_OPERATOR, HttpStatus.OK);
		}

		service.addTestAccount(operatorId, account);
		return new ResponseEntity<Object>(ChargeErrorCode.SUCCESS, HttpStatus.OK);
	}

	/**
	 * 删除充值 TEST 账号
	 * @author Kent
	 */
	@RequestMapping(value = "{operatorId}/api-test-accounts", method = RequestMethod.DELETE)
	public ResponseEntity<Object> removeChargeTestAccounts(@PathVariable int operatorId, @RequestParam String[] ids) {
		Operator operator = service.getOperator(operatorId);
		if (operator == null) {
			return new ResponseEntity<Object>(ChargeErrorCode.NOT_FIND_OPERATOR, HttpStatus.OK);
		}
		service.removeTestAccount(operatorId, new HashSet<String>(Arrays.asList(ids)));
		return new ResponseEntity<Object>(ChargeErrorCode.SUCCESS, HttpStatus.OK);
	}

	// /***
	// * 删除充值 TEST 账号
	// **/
	// @RequestMapping(value = "{operatorId}/api-test-accounts", method =
	// RequestMethod.DELETE)
	// public ResponseEntity<Object> removeChargeTestAccounts(@PathVariable int
	// operatorId, @RequestBody String json) {
	//
	// Set<String> account;
	// try {
	// account = JsonUtils.string2Object(json, Set.class);
	// } catch (Exception e) {
	// return new ResponseEntity<Object>(ChargeErrorCode.JSON_ERROR,
	// HttpStatus.BAD_REQUEST);
	// }
	//
	// Operator operator = service.getOperator(operatorId);
	// if (operator == null) {
	// return new ResponseEntity<Object>(ChargeErrorCode.NOT_FIND_OPERATOR,
	// HttpStatus.OK);
	// }
	// service.removeTestAccount(operatorId, account);
	// return new ResponseEntity<Object>(ChargeErrorCode.SUCCESS, HttpStatus.OK);
	//
	// }

}
